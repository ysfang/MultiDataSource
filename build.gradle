buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id "org.flywaydb.flyway" version "5.0.7"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task migrate1(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    url = 'jdbc:postgresql://localhost:5432/postgres'
    user = 'postgres'
    password = 'pass'
    locations = ['filesystem:src/main/resources/db/migration/ds1/']
}

task clean1(type: org.flywaydb.gradle.task.FlywayCleanTask) {
    url = 'jdbc:postgresql://localhost:5432/postgres'
    user = 'postgres'
    password = 'pass'
    locations = ['filesystem:src/main/resources/db/migration/ds1/']
}

task migrate2(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    url = 'jdbc:postgresql://localhost:5433/postgres'
    user = 'postgres'
    password = 'pass'
    locations = ['filesystem:src/main/resources/db/migration/ds2/']
}

task clean2(type: org.flywaydb.gradle.task.FlywayCleanTask) {
    url = 'jdbc:postgresql://localhost:5433/postgres'
    user = 'postgres'
    password = 'pass'
    locations = ['filesystem:src/main/resources/db/migration/ds2/']
}


task dbmigrate(dependsOn: ['dbclean', 'migrate1', 'migrate2'])

task dbclean (dependsOn: ['clean1', 'clean2'])
